# Using Cunningham et al. 2009
# r and n from the AgD study Cunningham
r = 196
n = 362
# 7 covs, liver only is excluded as it's highly correlated with number of meta site
#covariates <- c( "GENDER", "AGE_65", "B_ECOGCTCD", "TUMCATCD",
#                 "B_METACTCD", "PADJYNCD", "PRSURGCD")
# OR using orignial IPD data with two arms
# naive OR using IPD_P and AgD_F
tab<- naive_fun(IPD_data_P)#no adjustment, no covariate involvd
covariates <- c("GENDER" ,
"AGE_65",
"B_ECOGCTCD" ,
"TUMCATCD",
"PADJYNCD",
"PRSURGCD")
unmeasured_cov <- "B_METACTCD"; measured_cov <- covariates
full_cov <- c(covariates, unmeasured_cov);k<-3
n_b <- 10^4;n_me <- 10^3;n_unme<-10^2
#n_b <- 10^2;n_me <- 10^2;n_unme<-10^2
source("R code/ESTC_function_cov1.R")
OR_STC_META0<-STC_fun(k = 3, cov_name = covariates, AgD, IPD_data_P) #adjust 1 less cov
OR_true_META0<-ESTC_fun(k = 3, cov_name = full_cov, p= AgD[3, full_cov[7]], AgD, IPD_data_P) #adjust all cov
OR_ESTC2_META0<-ESTC_fun2(k = 3, measured_cov, unmeasured_cov, AgD, IPD_data_P)
length(OR_ESTC2_META0$pred);mean(OR_ESTC2_META0$pred)
OR_tab_META <- rbind(tab, c("STC (not adjusting the unobserved)", round(OR_STC_META0,round.n)),
c("ESTC1(adjusting with given p)",round(OR_true_META0,round.n)),
c("ESTC2(adjusting with predictions)",round(OR_ESTC2_META0$est,round.n)),
c("predicted_prob",round(OR_ESTC2_META0$pred,round.n),"observed_prop",AgD[3, full_cov[7]]))
print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_META))
cat(capture.output(print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_META))),
file=paste("Result/One cov/","/",unmeasured_cov,".txt",sep=""),sep="\n",append=F)
tab
OR_ESTC2_META0
library(dplyr)
library(wakefield)
library(sandwich)
library(lmtest)
library(copula)
library(randtoolbox)
library(ggplot2)
library(RColorBrewer)
library(boot)
path <- "X:/HAR_WG/WG/Single-arm_Trial/ESTC/Case study/"
setwd(path)
source("R code/STC_function_cov1.R")
source("R code/ESTC_function_cov1.R")
source("R code/Naive trt_function.R")
source("R code/Simulation of cov_function_cov1.R")
# read data
IPD_name <- "Data/IPD_data.csv"
cov_summary <- "Data/AgD_all.csv"
IPD_data <- read.csv(IPD_name)
# P+F arm from the IPD study, one arm of the data
IPD_data_P <- IPD_data %>%
filter(TRT == "Panitumumab + FOLFOX")
AgD <- read.csv(cov_summary)
round.n = 4
# Using Cunningham et al. 2009
# r and n from the AgD study Cunningham
r = 196
n = 362
# 7 covs, liver only is excluded as it's highly correlated with number of meta site
#covariates <- c( "GENDER", "AGE_65", "B_ECOGCTCD", "TUMCATCD",
#                 "B_METACTCD", "PADJYNCD", "PRSURGCD")
# OR using orignial IPD data with two arms
# naive OR using IPD_P and AgD_F
tab<- naive_fun(IPD_data_P)#no adjustment, no covariate involvd
###########################################################################
###first cov###############################################################
##########################################################################
# assuming one cov unmeasured at a time
# observed 6 cov, assuming 1 unmeasured cov
covariates <- c("AGE_65",
"B_ECOGCTCD",
"TUMCATCD",
"B_METACTCD",
"PADJYNCD",
"PRSURGCD") #measured_cov
unmeasured_cov <- "GENDER"; measured_cov <- covariates
full_cov <- c(covariates, unmeasured_cov);k<-3
n_b <- 10^4;n_me <- 10^3;n_unme<-10^2
#n_b <- 10^2;n_me <- 10^2;n_unme<-10^2
source("R code/ESTC_function_cov1.R")
#the k=3 third row of AgD is aggregate data from Cunningham
OR_STC_sex0<-STC_fun(k = 3, cov_name = covariates, AgD, IPD_data_P) #adjust 1 less cov
library(dplyr)
library(wakefield)
library(sandwich)
library(lmtest)
library(copula)
library(randtoolbox)
library(ggplot2)
library(RColorBrewer)
library(boot)
path <- "X:/HAR_WG/WG/Single-arm_Trial/ESTC/Case study/"
setwd(path)
source("R code/STC_function_cov1.R")
source("R code/ESTC_function_cov1.R")
source("R code/Naive trt_function.R")
source("R code/Simulation of cov_function_cov1.R")
# read data
IPD_name <- "Data/IPD_data.csv"
cov_summary <- "Data/AgD_all.csv"
IPD_data <- read.csv(IPD_name)
# P+F arm from the IPD study, one arm of the data
IPD_data_P <- IPD_data %>%
filter(TRT == "Panitumumab + FOLFOX")
AgD <- read.csv(cov_summary)
round.n = 4
# Using Cunningham et al. 2009
# r and n from the AgD study Cunningham
r = 196
n = 362
# 7 covs, liver only is excluded as it's highly correlated with number of meta site
#covariates <- c( "GENDER", "AGE_65", "B_ECOGCTCD", "TUMCATCD",
#                 "B_METACTCD", "PADJYNCD", "PRSURGCD")
# OR using orignial IPD data with two arms
# naive OR using IPD_P and AgD_F
tab<- naive_fun(IPD_data_P)#no adjustment, no covariate involvd
###########################################################################
###first cov###############################################################
##########################################################################
# assuming one cov unmeasured at a time
# observed 6 cov, assuming 1 unmeasured cov
covariates <- c("AGE_65",
"B_ECOGCTCD",
"TUMCATCD",
"B_METACTCD",
"PADJYNCD",
"PRSURGCD") #measured_cov
unmeasured_cov <- "GENDER"; measured_cov <- covariates
full_cov <- c(covariates, unmeasured_cov);k<-3
#n_b <- 10^4;n_me <- 10^3;n_unme<-10^2
n_b <- 10^2;n_me <- 10^1;n_unme<-10^1
source("R code/ESTC_function_cov1.R")
#the k=3 third row of AgD is aggregate data from Cunningham
OR_STC_sex0<-STC_fun(k = 3, cov_name = covariates, AgD, IPD_data_P) #adjust 1 less cov
OR_true_sex0<-ESTC_fun(k = 3, cov_name = full_cov, p= AgD[3, full_cov[7]], AgD, IPD_data_P) #adjust all cov
OR_ESTC2_sex0<-ESTC_fun2(k = 3, measured_cov, unmeasured_cov, AgD, IPD_data_P)
length(OR_ESTC2_sex0$pred);mean(OR_ESTC2_sex0$pred)
AgD[3, full_cov[7]]
OR_tab_sex <- rbind(tab, c("STC (not adjusting the unobserved)", round(OR_STC_sex0,round.n)),
c("ESTC1(adjusting with given p)",round(OR_true_sex0,round.n)),
c("ESTC2(adjusting with predictions)",round(OR_ESTC2_sex0$est,round.n)),
c("predicted_prob",round(OR_ESTC2_sex0$pred,round.n),"observed_prop",AgD[3, full_cov[7]]))
print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_sex))
cat(capture.output(print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_sex))),
file=paste("Result/One cov/","/",unmeasured_cov,".txt",sep=""),sep="\n",append=F)
###second cov##############################################################
# observed 6 cov, assuming 1 unmeasured cov
covariates <- c("GENDER" ,
"AGE_65",
"B_ECOGCTCD" ,
"TUMCATCD",
"PADJYNCD",
"PRSURGCD")
unmeasured_cov <- "B_METACTCD"; measured_cov <- covariates
full_cov <- c(covariates, unmeasured_cov);k<-3
#n_b <- 10^4;n_me <- 10^3;n_unme<-10^2
n_b <- 10^2;n_me <- 10^1;n_unme<-10^1
source("R code/ESTC_function_cov1.R")
OR_STC_META0<-STC_fun(k = 3, cov_name = covariates, AgD, IPD_data_P) #adjust 1 less cov
OR_true_META0<-ESTC_fun(k = 3, cov_name = full_cov, p= AgD[3, full_cov[7]], AgD, IPD_data_P) #adjust all cov
OR_ESTC2_META0<-ESTC_fun2(k = 3, measured_cov, unmeasured_cov, AgD, IPD_data_P)
length(OR_ESTC2_META0$pred);mean(OR_ESTC2_META0$pred)
OR_tab_META <- rbind(tab, c("STC (not adjusting the unobserved)", round(OR_STC_META0,round.n)),
c("ESTC1(adjusting with given p)",round(OR_true_META0,round.n)),
c("ESTC2(adjusting with predictions)",round(OR_ESTC2_META0$est,round.n)),
c("predicted_prob",round(OR_ESTC2_META0$pred,round.n),"observed_prop",AgD[3, full_cov[7]]))
print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_META))
cat(capture.output(print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_META))),
file=paste("Result/One cov/","/",unmeasured_cov,".txt",sep=""),sep="\n",append=F)
library(dplyr)
library(wakefield)
library(sandwich)
library(lmtest)
library(copula)
library(randtoolbox)
library(ggplot2)
library(RColorBrewer)
library(boot)
path <- "X:/HAR_WG/WG/Single-arm_Trial/ESTC/Case study/"
setwd(path)
source("R code/STC_function_cov1.R")
source("R code/ESTC_function_cov1.R")
source("R code/Naive trt_function.R")
source("R code/Simulation of cov_function_cov1.R")
# read data
IPD_name <- "Data/IPD_data.csv"
cov_summary <- "Data/AgD_all.csv"
IPD_data <- read.csv(IPD_name)
# P+F arm from the IPD study, one arm of the data
IPD_data_P <- IPD_data %>%
filter(TRT == "Panitumumab + FOLFOX")
AgD <- read.csv(cov_summary)
round.n = 4
# Using Cunningham et al. 2009
# r and n from the AgD study Cunningham
r = 196
n = 362
# 7 covs, liver only is excluded as it's highly correlated with number of meta site
#covariates <- c( "GENDER", "AGE_65", "B_ECOGCTCD", "TUMCATCD",
#                 "B_METACTCD", "PADJYNCD", "PRSURGCD")
# OR using orignial IPD data with two arms
# naive OR using IPD_P and AgD_F
tab<- naive_fun(IPD_data_P)#no adjustment, no covariate involvd
###########################################################################
###first cov###############################################################
##########################################################################
# assuming one cov unmeasured at a time
# observed 6 cov, assuming 1 unmeasured cov
covariates <- c("AGE_65",
"B_ECOGCTCD",
"TUMCATCD",
"B_METACTCD",
"PADJYNCD",
"PRSURGCD") #measured_cov
unmeasured_cov <- "GENDER"; measured_cov <- covariates
full_cov <- c(covariates, unmeasured_cov);k<-3
#n_b <- 10^4;n_me <- 10^3;n_unme<-10^2
n_b <- 10^2;n_me <- 10^3;n_unme<-10^2
source("R code/ESTC_function_cov1.R")
#the k=3 third row of AgD is aggregate data from Cunningham
OR_STC_sex0<-STC_fun(k = 3, cov_name = covariates, AgD, IPD_data_P) #adjust 1 less cov
OR_true_sex0<-ESTC_fun(k = 3, cov_name = full_cov, p= AgD[3, full_cov[7]], AgD, IPD_data_P) #adjust all cov
OR_ESTC2_sex0<-ESTC_fun2(k = 3, measured_cov, unmeasured_cov, AgD, IPD_data_P)
length(OR_ESTC2_sex0$pred);mean(OR_ESTC2_sex0$pred)
AgD[3, full_cov[7]]
OR_tab_sex <- rbind(tab, c("STC (adjusting only the unobserved)", round(OR_STC_sex0,round.n)),
c("ESTC1(adjusting the unobserved with given p)",round(OR_true_sex0,round.n)),
c("ESTC2(adjusting the unobserved with predictions)",round(OR_ESTC2_sex0$est,round.n)),
c("predicted_prob",round(OR_ESTC2_sex0$pred,round.n),"observed_prop",AgD[3, full_cov[7]]))
print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_sex))
cat(capture.output(print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_sex))),
file=paste("Result/One cov/","/",unmeasured_cov,".txt",sep=""),sep="\n",append=F)
###second cov##############################################################
# observed 6 cov, assuming 1 unmeasured cov
covariates <- c("GENDER" ,
"AGE_65",
"B_ECOGCTCD" ,
"TUMCATCD",
"PADJYNCD",
"PRSURGCD")
unmeasured_cov <- "B_METACTCD"; measured_cov <- covariates
full_cov <- c(covariates, unmeasured_cov);k<-3
#n_b <- 10^4;n_me <- 10^3;n_unme<-10^2
n_b <- 10^2;n_me <- 10^3;n_unme<-10^2
source("R code/ESTC_function_cov1.R")
OR_STC_META0<-STC_fun(k = 3, cov_name = covariates, AgD, IPD_data_P) #adjust 1 less cov
OR_true_META0<-ESTC_fun(k = 3, cov_name = full_cov, p= AgD[3, full_cov[7]], AgD, IPD_data_P) #adjust all cov
OR_ESTC2_META0<-ESTC_fun2(k = 3, measured_cov, unmeasured_cov, AgD, IPD_data_P)
length(OR_ESTC2_META0$pred);mean(OR_ESTC2_META0$pred)
OR_tab_META <- rbind(tab, c("STC (only adjusting the observed)", round(OR_STC_META0,round.n)),
c("ESTC1(adjusting the unobserved with given p)",round(OR_true_META0,round.n)),
c("ESTC2(adjusting the unobserved with predictions)",round(OR_ESTC2_META0$est,round.n)),
c("predicted_prob",round(OR_ESTC2_META0$pred,round.n),"observed_prop",AgD[3, full_cov[7]]))
print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_META))
cat(capture.output(print(list(X=covariates,U=unmeasured_cov,OR_table=OR_tab_META))),
file=paste("Result/One cov/","/",unmeasured_cov,".txt",sep=""),sep="\n",append=F)
###########run############
library(dplyr)
library(lmtest)
library(copula)
library(randtoolbox)
library(boot)
setwd("X:/HAR_WG/WG/Single-arm_Trial/ESTC/R code/Code Github")
Task_ID <- 1 #take value from 1 to 120, the scenario to run
n_mc <- 10 #number of monte carlo simulations
tag<- 1
source("All_functions.R")
#ipt2, ID are calculated
ipt1 <- ceiling(Task_ID/12) #Scenario number
ipt2 <- Task_ID-(ipt1-1)*12 #Study/Column number
#######################################################################################
#2. model input
n_bt <- 10^3#number of bootstrap
model_input_raw<- read.csv(paste("model_input_S",ipt1,"_BB.csv",sep=''))
row.names(model_input_raw) <-model_input_raw[,1]
model_input<-model_input_raw[,ipt2+1, drop=FALSE]
#3. run simulations
final_result <- matrix(NA, nrow = n_mc, ncol = 2)
i <- 0
while (i < n_mc) {
i <-i+1
final_result[i, ] <-
my_sim_fun(
N = as.numeric(model_input["N",]),
n_bt=n_bt,
covariates = c("X1", "X2"),
char_cov = as.character(model_input["char_cov",]),
cor_input_AgD = as.numeric(model_input["cor_input_AgD",]),
cor_input_IPD = as.numeric(model_input["cor_input_IPD",]),
p1_AgD = as.numeric(model_input["p1_AgD",]),
p2_AgD = as.numeric(model_input["p2_AgD",]),
p1_IPD = as.numeric(model_input["p1_IPD",]),
p2_IPD = as.numeric(model_input["p2_IPD",]),
b_0 = as.numeric(model_input["b_0",]),
b_1 = as.numeric(model_input["b_1",]),
b_2 = as.numeric(model_input["b_2",]),
b_trt_B = as.numeric(model_input["b_trt_B",]),
interaction_X2 = model_input["interaction_X2",],
b_X2_trt = as.numeric(model_input["b_X2_trt",])
)
}
write.csv(final_result, file = paste("Output/n",model_input["N",],"_S",ipt1,"_C",ipt2,"_mc",n_mc,"_",tag,".csv",sep=""), row.names = F)
1-(0.072*0.036)
1-(0.0405*0.0566)
1-(0.595*0.566)
1-(0.595*(1-0.566))
(0.595*(1-0.566))
1-((1-0.964)*(1-0.928))
1-((1-0.964)*(1-0.42))
1-((1-0.405)*(1-0.566))
1-((1-0.902)*(1-0.566))
###########run############
library(dplyr)
library(lmtest)
library(copula)
library(randtoolbox)
library(boot)
setwd("X:/HAR_WG/WG/Single-arm_Trial/ESTC/R code/Github/unanchored-simulated-treament-comparison/
Unanchored STC_Simulation Study")
setwd("X:/HAR_WG/WG/Single-arm_Trial/ESTC/R code/Github/unanchored-simulated-treament-comparison/Unanchored STC_Simulation Study")
source("All_functions.R")
#We take the first scenario as an example#
Task_ID <- 1 #take value from 1 to 120, the scenario to run
n_mc <- 10 #number of monte carlo simulations
n_bt <- 100 #number of bootstrap
ipt1 <- ceiling(Task_ID/12) #Scenario number
ipt2 <- Task_ID-(ipt1-1)*12 #Study/Column number
model_input_raw<- read.csv(paste("Model_input_S",ipt1,"_BB.csv",sep=''))
row.names(model_input_raw) <-model_input_raw[,1]
model_input<-model_input_raw[,ipt2+1, drop=FALSE]
final_result <- matrix(NA, nrow = n_mc, ncol = 2)
i <- 0
while (i < n_mc) {
i <-i+1
final_result[i, ] <-
my_sim_fun(
N = as.numeric(model_input["N",]),
n_bt=n_bt,
covariates = c("X1", "X2"),
char_cov = as.character(model_input["char_cov",]),
cor_input_AgD = as.numeric(model_input["cor_input_AgD",]),
cor_input_IPD = as.numeric(model_input["cor_input_IPD",]),
p1_AgD = as.numeric(model_input["p1_AgD",]),
p2_AgD = as.numeric(model_input["p2_AgD",]),
p1_IPD = as.numeric(model_input["p1_IPD",]),
p2_IPD = as.numeric(model_input["p2_IPD",]),
b_0 = as.numeric(model_input["b_0",]),
b_1 = as.numeric(model_input["b_1",]),
b_2 = as.numeric(model_input["b_2",]),
b_trt_B = as.numeric(model_input["b_trt_B",]),
interaction_X2 = model_input["interaction_X2",],
b_X2_trt = as.numeric(model_input["b_X2_trt",])
)
}
#tag<- 1 # to distinguish the output
write.csv(final_result, file = paste("Output/n",model_input["N",],"_S",ipt1,"_C",ipt2,"_mc",n_mc,"_",tag,".csv",sep=""), row.names = F)
tag<- 1 # to distinguish the output
tag<- 2 # to distinguish the output
write.csv(final_result, file = paste("Output/n",model_input["N",],"_S",ipt1,"_C",ipt2,"_mc",n_mc,"_",tag,".csv",sep=""), row.names = F)
View(final_result)
colnames(final_result) <- c("Mean","SE")
View(final_result)
##MODEL INPUT##
N <- 200 #number of patients
covariates <- c("X1", "X2") #name of the covaraites
char_cov <- "bin" #binary covariates
cor_input_AgD <- 0.2 #correlation between covariates in AgD population
cor_input_IPD <- 0.2 #correlation between covariates in IPD population
p1_AgD <- 0.1; p2_AgD <- 0.1 #covariates in AgD population
p1_IPD <- 0.2; p2_IPD <- 0.2 #covariates in IPD population
b_0 <- -0.25; b_1 <- 0.09; b_2 <- 0.15
b_trt_B <- -0.45; interaction_X2 <- "FALSE"; b_X2_trt <- "NA"
source("All_functions.R")
source("All_functions.R")
##MODEL INPUT##
N <- 200 #number of patients
covariates <- c("X1", "X2") #name of the covaraites
char_cov <- "bin" #binary covariates
cor_input_AgD <- 0.2 #correlation between covariates in AgD population
cor_input_IPD <- 0.2 #correlation between covariates in IPD population
p1_AgD <- 0.1; p2_AgD <- 0.1 #covariates in AgD population
p1_IPD <- 0.2; p2_IPD <- 0.2 #covariates in IPD population
b_0 <- -0.25; b_1 <- 0.09; b_2 <- 0.15
b_trt_B <- -0.45; interaction_X2 <- "FALSE"; b_X2_trt <- "NA"
n_bt <- 100 #number of bootstrap
# Sample covariate for IPD and AgD using Cov_function.R
cov_all <- cov_fun(N=N, char_cov=char_cov,
cor_input_AgD=cor_input_AgD, cor_input_IPD=cor_input_IPD,
m1_AgD=m1_AgD, sd1_AgD=sd1_AgD,
m2_AgD=m2_AgD, sd2_AgD=sd2_AgD,
p1_AgD=p1_AgD,
p2_AgD=p2_AgD,
m1_IPD=m1_IPD, sd1_IPD=sd1_IPD,
m2_IPD=m2_IPD, sd2_IPD=sd2_IPD,
p1_IPD=p1_IPD,
p2_IPD=p2_IPD)
View(cov_all)
source("All_functions.R")
##1. MODEL INPUT##
N <- 200 #number of patients
covariates <- c("X1", "X2") #name of the covaraites
char_cov <- "bin" #binary covariates
cor_input_AgD <- 0.2 #correlation between covariates in AgD population
cor_input_IPD <- 0.2 #correlation between covariates in IPD population
p1_AgD <- 0.1; p2_AgD <- 0.1 #covariates in AgD population
p1_IPD <- 0.2; p2_IPD <- 0.2 #covariates in IPD population
b_0 <- -0.25; b_1 <- 0.09; b_2 <- 0.15 #model parameters
b_trt_B <- -0.45; interaction_X2 <- "FALSE"; b_X2_trt <- "NA" #model parameters
n_bt <- 100 #number of bootstrap
##2. Generate simulated datasets##
# Sample covariate for IPD and AgD using cov_fun.R #
cov_all <- cov_fun(N=N, char_cov=char_cov,
cor_input_AgD=cor_input_AgD, cor_input_IPD=cor_input_IPD,
m1_AgD=m1_AgD, sd1_AgD=sd1_AgD,
m2_AgD=m2_AgD, sd2_AgD=sd2_AgD,
p1_AgD=p1_AgD,
p2_AgD=p2_AgD,
m1_IPD=m1_IPD, sd1_IPD=sd1_IPD,
m2_IPD=m2_IPD, sd2_IPD=sd2_IPD,
p1_IPD=p1_IPD,
p2_IPD=p2_IPD)
if (char_cov == "bin") {
if (interaction_X2 == TRUE) {
AB_IPD_all <-
cov_all %>%
# Generate outcomes using logistic model
mutate(yprob = 1 / (1 + exp(-(
b_0 + b_1 * X1 + b_2 * X2  +
if_else(trt == "B", b_trt_B + b_X2_trt * X2 , 0)
))),
y = rbinom(N * 4, 1, yprob)) %>%
select(-yprob) # Drop the yprob column
}
if (interaction_X2 == FALSE) {
AB_IPD_all <-
cov_all %>%
# Generate outcomes using logistic model
mutate(yprob = 1 / (1 + exp(-(
b_0 + b_1 * X1  + b_2 * X2   +
if_else(trt == "B", b_trt_B , 0)
))),
y = rbinom(N * 4, 1, yprob)) %>%
select(-yprob) # Drop the yprob column
}
}
# construct the data set IPD B arm and AgD A arm
# non-treated arm of AgD population
A_AgD <- AB_IPD_all %>%
filter(trt == "A", pop == "AgD")
# treated arm of IPD population
B_IPD <- AB_IPD_all %>%
filter(trt == "B", pop == "IPD")
sum(A_AgD$y)/ N
mean(A_AgD$X1)
mean(A_AgD$X2)
write.csv(B_IPD,"B_IPD.csv")
r_AgD <- sum(A_AgD$y) #number of events in AgD population
p_x1_AgD <- mean(A_AgD$X1) #covariates X1 in AgD population
p_x2_AgD <- mean(A_AgD$X2) #covariates X2 in AgD population
summary_AgD <- c(r_AgD,N,p_x1_AgD, p_x2_AgD)
colnames(summary_AgD) <- c("number of events", "number of patients", "X1", "X2")
names(summary_AgD) <- c("number of events", "number of patients", "X1", "X2")
summary_AgD
write.csv(summary_AgD,"A_AgDSummary.csv")
write.csv(B_IPD,"B_IPD.csv",row.names = FALSE)
#bootstrap
boot_fun <- function(i) {
index <- sample(nrow(B_IPD), N, replace = TRUE)
boot_IPD <- B_IPD[index, ]
ipd_cor <-
cor(boot_IPD[, c("X1", "X2")])
ipd_copula <-
copula::normalCopula(copula::P2p(ipd_cor),
dim = ncol(ipd_cor),
dispstr = "un") #construct a normal copula for n_X random variables with correlation structure as ipd_cor.
if (char_cov == "bin") {
Mvd <-
mvdc(
copula = ipd_copula,
margins = c("binom", "binom"),
paramMargins = list(list(
size = 1, prob = p_x1_AgD
),
list(
size = 1, prob = p_x2_AgD
))
)
}
AgD_cov <- rMvdc(10000, Mvd)
AgD_cov <- data.frame(AgD_cov)
full_cov <- c("X1", "X2")
colnames(AgD_cov) <- full_cov
m_STC1 <-
glm(as.formula(paste("y ~ ",
paste(
covariates, collapse = "+"
))), data = boot_IPD, family = binomial)
p_STC1 <- predict(m_STC1,
newdata = data.frame(AgD_cov),
type = "response")
p_B <- mean(p_STC1)
t11 <- log(p_B / (1 - p_B))
t11
}
boot.t11 <- sapply(1:n_bt, boot_fun)
t12 <- log(r_AgD/ N / (1 - r_AgD/N))
var_A <- N/(r_AgD *(N-r_AgD)) #variance of A arm
c(mean(boot.t11)-t12, sqrt(var(boot.t11)+var_A))
